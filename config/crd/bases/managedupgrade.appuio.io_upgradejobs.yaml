---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: upgradejobs.managedupgrade.appuio.io
spec:
  group: managedupgrade.appuio.io
  names:
    kind: UpgradeJob
    listKind: UpgradeJobList
    plural: upgradejobs
    singular: upgradejob
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: UpgradeJob is the Schema for the upgradejobs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: UpgradeJobSpec defines the desired state of UpgradeJob
            properties:
              config:
                description: UpgradeJobConfig defines the configuration for the upgrade
                  job
                properties:
                  machineConfigPools:
                    description: MachineConfigPools defines the machine config pool
                      specific configuration for the upgrade job
                    items:
                      description: UpgradeJobMachineConfigPoolSpec allows configuring
                        the upgrade of a machine config pool
                      properties:
                        delayUpgrade:
                          description: DelayUpgrade defines whether to delay the upgrade
                            of the machine config pool
                          properties:
                            delayMax:
                              description: |-
                                DelayMax defines the maximum delay after which the upgrade of the machine config pool should start.
                                Relative to the `.spec.startBefore` timestamp of the upgrade job.
                                If the upgrade of the machine config pool can't be started before this time, it is considered failed.
                              type: string
                            delayMin:
                              description: |-
                                DelayMin defines the delay after which the upgrade of the machine config pool should start.
                                Relative to the `.spec.startAfter` timestamp of the upgrade job.
                              type: string
                          type: object
                        matchLabels:
                          description: |-
                            MatchLabels defines the labels to match the machine config pool.
                            If empty, all machine config pools are matched.
                            If nil, no machine config pools are matched.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    type: array
                  postUpgradeHealthChecks:
                    description: PostUpgradeHealthChecks defines the health checks
                      to be performed after the upgrade
                    properties:
                      skipDegradedOperatorsCheck:
                        description: SkipDegradedOperatorsCheck defines whether to
                          check the ClusterVersion object for degraded operators when
                          performing the health check
                        type: boolean
                      timeout:
                        default: 1h
                        description: Timeout defines the timeout after which the health
                          check is considered failed
                        format: duration
                        type: string
                    required:
                    - timeout
                    type: object
                  preUpgradeHealthChecks:
                    description: PreUpgradeHealthChecks defines the health checks
                      to be performed before the upgrade
                    properties:
                      skipDegradedOperatorsCheck:
                        description: SkipDegradedOperatorsCheck defines whether to
                          check the ClusterVersion object for degraded operators when
                          performing the health check
                        type: boolean
                      timeout:
                        default: 1h
                        description: Timeout defines the timeout after which the health
                          check is considered failed
                        format: duration
                        type: string
                    required:
                    - timeout
                    type: object
                  upgradeTimeout:
                    default: 12h
                    description: |-
                      UpgradeTimeout defines the timeout after which the upgrade is considered failed.
                      Relative to the `.spec.startAfter` timestamp of the upgrade job.
                    format: duration
                    type: string
                required:
                - postUpgradeHealthChecks
                - preUpgradeHealthChecks
                - upgradeTimeout
                type: object
              desiredVersion:
                description: |-
                  DesiredVersion defines the desired version to upgrade to.
                  Can be empty if the upgrade job was created when there was no new version available.
                properties:
                  architecture:
                    description: |-
                      architecture is an optional field that indicates the desired
                      value of the cluster architecture. In this context cluster
                      architecture means either a single architecture or a multi
                      architecture. architecture can only be set to Multi thereby
                      only allowing updates from single to multi architecture. If
                      architecture is set, image cannot be set and version must be
                      set.
                      Valid values are 'Multi' and empty.
                    enum:
                    - Multi
                    - ""
                    type: string
                  force:
                    description: |-
                      force allows an administrator to update to an image that has failed
                      verification or upgradeable checks. This option should only
                      be used when the authenticity of the provided image has been verified out
                      of band because the provided image will run with full administrative access
                      to the cluster. Do not use this flag with images that comes from unknown
                      or potentially malicious sources.
                    type: boolean
                  image:
                    description: |-
                      image is a container image location that contains the update.
                      image should be used when the desired version does not exist in availableUpdates or history.
                      When image is set, version is ignored. When image is set, version should be empty.
                      When image is set, architecture cannot be specified.
                    type: string
                  version:
                    description: |-
                      version is a semantic version identifying the update version.
                      version is ignored if image is specified and required if
                      architecture is specified.
                    type: string
                type: object
                x-kubernetes-validations:
                - message: cannot set both Architecture and Image
                  rule: 'has(self.architecture) && has(self.image) ? (self.architecture
                    == '''' || self.image == '''') : true'
                - message: Version must be set if Architecture is set
                  rule: 'has(self.architecture) && self.architecture != '''' ? self.version
                    != '''' : true'
              desiredVersionCheckAvailability:
                description: |-
                  DesiredVersionCheckAvailability defines whether to check if the desired version is available at the start of the upgrade.
                  This is done by searching the ClusterVersion status for the desired version.
                  If set to true, the upgrade job will fail with reason UpgradeJobReasonUpgradeWithdrawn if the desired version is not available.
                  If set to false, the upgrade job will not check for the availability of the desired version and will apply the DesiredVersion directly.
                  Defaults to true.
                type: boolean
              startAfter:
                description: StartAfter defines the time after which the upgrade job
                  should start
                format: date-time
                type: string
              startBefore:
                description: |-
                  StartBefore defines the time before which the upgrade job should start.
                  If the upgrade job is not started before this time, it is considered failed.
                format: date-time
                type: string
            required:
            - config
            - startAfter
            - startBefore
            type: object
          status:
            description: UpgradeJobStatus defines the observed state of UpgradeJob
            properties:
              conditions:
                description: Conditions is a list of conditions for the UpgradeJob
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              hookTracker:
                description: HookJobTracker keeps track of the hooks that have been
                  executed
                items:
                  description: HookJobTracker keeps track of the hooks that have been
                    executed
                  properties:
                    hookEvent:
                      description: HookEvent is the event of the hook
                      type: string
                    message:
                      description: Message is the message for the status
                      type: string
                    status:
                      description: Status is the status of the hook
                      type: string
                    trackingKey:
                      description: |-
                        TrackingKey is an additional key to track the hook.
                        Should be unique for events that may run multiple times.
                        The event emitter is responsible for ensuring the uniqueness of the key.
                        Events that are run only once per upgrade job can omit this key.
                      type: string
                    upgradeJobHook:
                      description: UpdgradeJobHook is the hook that was executed
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
